---
import { PUBLIC_COMPANY_NAME } from "../env/config";
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Login</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65"
      crossorigin="anonymous"
    />
    
  </head>
  <body class="bg-light text-center min-vh-100 min-vw-100 d-flex">
    <main class="form-signin m-auto border rounded shadow py-5 px-3 bg-white" style="min-width: 380px;">
      <form>
        <img class="mb-4" src="/assets/CCILP.jpg" alt="" width="100" height="auto">
        <h1 class="h3 mb-3 fw-normal">Inicio de Sesión</h1>
    
        <div class="form-floating">
          <input type="email" class="form-control" autocomplete="email" id="email" name="email" placeholder="name@example.com">
          <label for="floatingInput">Correo</label>
        </div>
        <div class="form-floating my-2">
          <input type="password" autocomplete="current-password" class="form-control" id="password" name="password" placeholder="Contraseña">
          <label for="floatingPassword">Contraseña</label>
        </div>
        <button class="w-100 btn btn-lg btn-primary my-2" type="submit">Verificar</button>
      </form>
    </main>
    <script>
      import UserRepository from "../repositories/UserRepository";
      import SupportRepository from "../repositories/SupportRepository";
      import { setCookie } from "../util/cookies";
      document.querySelector("form")?.addEventListener("submit", async (e) => {
        e.preventDefault();
        const form = e.target;
        const data = new FormData(form as HTMLFormElement);
        const userRepository = new UserRepository();
        const supportRepository = new SupportRepository();
        const identifier = data.get("email") as string;
        const password = data.get("password") as string;
        const {msg} = await supportRepository.notification()
        if (msg === 'EXPIRADO'){
          alert('El servicio ha caducado, favor realizar pago de los servicios.')
          return
        }

        if(msg) alert(msg)
        
        const user = await userRepository.signin(identifier, password);
        if (user instanceof Error) {
          alert(user.message);
        } else {
          
          //@ts-ignore
          setCookie("email", user.user.email as string);
          //@ts-ignore
          setCookie("jwt", user.jwt as string);
          //@ts-ignore
          setCookie("id", user.user.id + "");
          //@ts-ignore
          setCookie("username", user.user.username as string);
          location.href = "/";
        }
      });
    </script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4"
      crossorigin="anonymous"></script>
  </body>
</html>
